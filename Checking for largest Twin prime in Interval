/*

Farhan Pushan

Lab 5E


*/

#include <iostream>
using namespace std; 

bool isPrime(int n);

int nextPrime(int n);

bool isTwinPrime(int n);

int nextTwinPrime(int n);

int countPrimes(int a, int b);

bool isDivisibleBy(int n, int d);

int largestTwinPrime(int a, int b);
//return largest twin prime in range a <= N <= b

bool isDivisibleBy(int n, int d)

{

if (d == 0)

	{return false;}

		

	if ( n % d == 0)

	{

		return true;

	} 

	else

	{

		return false;

	}

	

}

bool isPrime(int n)  

{

if (n <=1)

	{return false;}	

	

	for (int i = 2; i < n ; i++)

	{

		if ( n % i == 0 )

		{

			return false;

		}

		

		

	}

	

	

	return true;

		

}


int nextPrime(int n){

n++;

	while( !isPrime(n)){
	
		n++;
	
	}
	
return n;
}


int countPrimes(int a, int b){

int primeCount = 0;

		for(int i = a; i <= b; i++){
			if(isPrime(i)){
			
				
				primeCount++;
				}
	
		}
	
	return primeCount;

}

bool isTwinPrime(int n){
		if(isPrime(n) && (isPrime(n+2) || isPrime(n-2))){
			
			return 1;
			
		}
		
		else{
			return 0;
		}
	}
	
int nextTwinPrime(int n){

n++;	
	while (!isTwinPrime(n)){
	
		n++;
	
	}
	
	return n;
}


int largestTwinPrime(int a, int b){

	int newnum =0;
	for(int i = b; i >= a; i--){
		if(isTwinPrime(i)){
			return i;
		}	
	}
return -1;
}






int main(){
	
	int firstnum, secnum;	

		

	cout << "Enter integer:" << endl;

	

	cin >> firstnum;

	

	cout << "Enter integer:" << endl;

	

	cin >> secnum;

	

	int input = isDivisibleBy(firstnum , secnum);

	

	cout << endl;


	if(input == 1)


	{

		cout << "Yes" << endl;

	}

	

	else

	{

		cout << "No" << endl;

	}

	

	

	int primeTest = isPrime(firstnum);

	

	cout << primeTest << endl;
	
	
	
	
	
	cout << nextPrime(14) << endl;
	
	
	cout << countPrimes(11, 20)<< endl;
	

	
	int twinput = isTwinPrime(25);

	cout << endl;


	if(twinput == 1)


	{

		cout << "Yes" << endl;

	}

	

	else

	{

		cout << "No" << endl;

	}

	cout << nextTwinPrime(5) << endl;
	
	cout << largestTwinPrime(14, 16) << endl;
}	
